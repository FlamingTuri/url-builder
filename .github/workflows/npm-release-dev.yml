name: npm-release-dev
on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm ci
      - run: npm run lint
      - run: npm test
      # gets the current version from package.json
      - run: VERSION=`node -p "require('./package.json').version"`
      # gets current timestamp with format yyyy.MM.dd-hh.mm.ss
      - run: TIMESTAMP=`date +"%Y.%m.%d-%H.%M.%S"`
      # sets the dev release version in the environment variables
      - run: echo "DEV_VERSION=$VERSION-dev-$TIMESTAMP" >> $GITHUB_ENV

  npm-registry-release:
    needs: build
    runs-on: ubuntu-latest
    permissions: 
      contents: read
      packages: write 
    steps:
      - uses: actions/checkout@v2
      # setup to publish to npm registry
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
      # temporary modifies package.json version (the timestamp is used to get a uuid)
      - run: npm version ${{ env.DEV_VERSION }} --no-git-tag-version
      - run: npm publish --access public --tag dev
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  github-packages-release:
    needs: npm-registry-release
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      # setup to publish to github registry
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          registry-url: 'https://npm.pkg.github.com'
      - run: npm ci
      # temporary modifies package.json version (the timestamp is used to get a uuid)
      - run: npm version ${{ env.DEV_VERSION }} --no-git-tag-version
      - run: npm publish --access public --tag dev
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
