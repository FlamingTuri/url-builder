name: npm-release-dev
on:
  schedule:
    - cron:  '00 10 * * *'

jobs:
  check-for-changes:
    runs-on: ubuntu-latest
    outputs:
      output: ${{ steps.status.outputs.value }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: develop
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm ci
      - id: status
        # using a run statement for each command does not work
        run: |
          OUT=`node script/check-for-changes-within-24h.mjs`
          echo "$OUT build step"
          echo "::set-output name=value::$OUT"

  build:
    needs: check-for-changes
    runs-on: ubuntu-latest
    if: ${{ needs.check-for-changes.outputs.output == 'run' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: develop
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm ci
      - run: npm run lint
      - run: npm test
      # gets the current version from package.json
      - run: VERSION=`node -p "require('./package.json').version"`
      # gets current timestamp with format yyyy.MM.dd-hh.mm.ss
      - run: TIMESTAMP=`date +"%Y.%m.%d-%H.%M.%S"`
      - run: DEV_VERSION=$VERSION-dev-$TIMESTAMP
      - run: echo "new package release version $DEV_VERSION"
      # sets the dev release version in the environment variables
      - run: echo "DEV_VERSION=$DEV_VERSION" >> $GITHUB_ENV

  npm-registry-release:
    needs: build
    runs-on: ubuntu-latest
    permissions: 
      contents: read
      packages: write 
    steps:
      - uses: actions/checkout@v2
        with:
          ref: develop
      # setup to publish to npm registry
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
      # temporary modifies package.json version (the timestamp is used to get a uuid)
      - run: npm version ${{ env.DEV_VERSION }} --no-git-tag-version
      - run: npm publish --access public --tag dev
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  github-packages-release:
    needs: npm-registry-release
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v2
        with:
          ref: develop
      # setup to publish to github registry
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          registry-url: 'https://npm.pkg.github.com'
      - run: npm ci
      # temporary modifies package.json version (the timestamp is used to get a uuid)
      - run: npm version ${{ env.DEV_VERSION }} --no-git-tag-version
      - run: npm publish --access public --tag dev
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
